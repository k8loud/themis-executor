### add pod
POST localhost:8080/execute
Content-Type: application/json

{
  "collectionName": "kubernetes",
  "actionName": "AddResourceAction",
  "params": {
    "params": {
      "namespace": "default",
      "resourceDescription": "            apiVersion: v1\r\n            kind: Pod\r\n            metadata:\r\n              name: nginx\r\n            spec:\r\n              containers:\r\n              - name: nginx\r\n                image: nginx:1.14.2\r\n                ports:\r\n                - containerPort: 80"
    }
  }
}

### add config map
POST localhost:8080/execute
Content-Type: application/json

{
  "collectionName": "kubernetes",
  "actionName": "AddResourceAction",
  "params": {
    "params": {
      "namespace": "default",
      "resourceDescription": "            kind: ConfigMap\r\n            metadata:\r\n              creationTimestamp: 2022-02-18T18:52:05Z\r\n              name: game-config\r\n              namespace: default\r\n              uid: b4952dc3-d670-11e5-8cd0-68f728db1985\r\n            data:\r\n              game.properties: |\r\n                enemies=aliens\r\n                lives=3\r\n                enemies.cheat=true\r\n                enemies.cheat.level=noGoodRotten\r\n                secret.code.passphrase=UUDDLRLRBABAS\r\n                secret.code.allowed=true\r\n                secret.code.lives=30\r\n              ui.properties: |\r\n                color.good=purple\r\n                color.bad=yellow\r\n                allow.textmode=true\r\n                how.nice.to.look=fairlyNice"
    }
  }
}

### add stateful set
POST localhost:8080/execute
Content-Type: application/json

{
  "collectionName": "kubernetes",
  "actionName": "AddResourceAction",
  "params": {
    "params": {
      "namespace": "default",
      "resourceDescription": "apiVersion: apps\/v1\r\n            kind: StatefulSet\r\n            metadata:\r\n              name: web\r\n            spec:\r\n              selector:\r\n                matchLabels:\r\n                  app: nginx # has to match .spec.template.metadata.labels\r\n              serviceName: \"nginx\"\r\n              replicas: 3 # by default is 1\r\n              minReadySeconds: 10 # by default is 0\r\n              template:\r\n                metadata:\r\n                  labels:\r\n                    app: nginx # has to match .spec.selector.matchLabels\r\n                spec:\r\n                  terminationGracePeriodSeconds: 10\r\n                  containers:\r\n                  - name: nginx\r\n                    image: registry.k8s.io\/nginx-slim:0.8\r\n                    ports:\r\n                    - containerPort: 80\r\n                      name: web\r\n                    volumeMounts:\r\n                    - name: www\r\n                      mountPath: \/usr\/share\/nginx\/html\r\n              volumeClaimTemplates:\r\n              - metadata:\r\n                  name: www\r\n                spec:\r\n                  accessModes: [ \"ReadWriteOnce\" ]\r\n                  storageClassName: \"my-storage-class\"\r\n                  resources:\r\n                    requests:\r\n                      storage: 1Gi"
    }
  }
}

### add pod with namespace
POST localhost:8080/execute
Content-Type: application/json

{
  "collectionName": "kubernetes",
  "actionName": "AddResourceAction",
  "params": {
    "params": {
      "resourceDescription": "            apiVersion: v1\r\n            kind: Pod\r\n            metadata:\r\n              name: nginx-with-namespace\r\n              namespace: namespace-from-resource-description\r\n            spec:\r\n              containers:\r\n              - name: nginx-with-namespace\r\n                image: nginx:1.14.2"
    }
  }
}
